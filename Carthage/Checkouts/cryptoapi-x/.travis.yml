language: swift
osx_image: xcode10

env:
  global:
    - LC_CTYPE=en_US.UTF-8
    - PROJECT=VirgilCryptoAPI.xcodeproj
    - IOS_FRAMEWORK_SCHEME="VirgilCryptoAPI iOS"
    - MACOS_FRAMEWORK_SCHEME="VirgilCryptoAPI macOS"
    - TVOS_FRAMEWORK_SCHEME="VirgilCryptoAPI tvOS"
    - WATCHOS_FRAMEWORK_SCHEME="VirgilCryptoAPI watchOS"
    - IOS_SDK=iphonesimulator12.0
    - MACOS_SDK=macosx10.14
    - TVOS_SDK=appletvsimulator12.0
    - WATCHOS_SDK=watchsimulator5.0
    - FRAMEWORK_NAME=VirgilCryptoAPI
  matrix:
    - DESTINATION="OS=12.0,name=iPhone SE"                   SCHEME="$IOS_FRAMEWORK_SCHEME"      SDK="$IOS_SDK"      TWO_STEP_BUILD_ENABLED="YES"  CARTHAGE_PLATFORM_NAME="iOS"      RUN_TESTS="YES"  PUBLISH_CARTHAGE="NO"   POD_LIB_LINT="YES"  SWIFT_LINT="NO"
    - DESTINATION="arch=x86_64"                              SCHEME="$MACOS_FRAMEWORK_SCHEME"    SDK="$MACOS_SDK"    TWO_STEP_BUILD_ENABLED="YES"  CARTHAGE_PLATFORM_NAME="Mac"      RUN_TESTS="YES"  PUBLISH_CARTHAGE="YES"  POD_LIB_LINT="NO"   SWIFT_LINT="NO"
    - DESTINATION="OS=12.0,name=Apple TV 4K"                 SCHEME="$TVOS_FRAMEWORK_SCHEME"     SDK="$TVOS_SDK"     TWO_STEP_BUILD_ENABLED="YES"  CARTHAGE_PLATFORM_NAME="tvOS"     RUN_TESTS="YES"  PUBLISH_CARTHAGE="NO"   POD_LIB_LINT="NO"   SWIFT_LINT="YES"
    - DESTINATION="OS=5.0,name=Apple Watch Series 4 - 44mm"  SCHEME="$WATCHOS_FRAMEWORK_SCHEME"  SDK="$WATCHOS_SDK"  TWO_STEP_BUILD_ENABLED="NO"   CARTHAGE_PLATFORM_NAME="watchOS"  RUN_TESTS="YES"  PUBLISH_CARTHAGE="NO"   POD_LIB_LINT="NO"   SWIFT_LINT="NO"

before_install:
  - set -e
  - set -o pipefail
  - brew update
  - brew outdated carthage || brew upgrade carthage
  - xcodebuild -version
  - xcodebuild -showsdks

script:
  - |
    if [ $SWIFT_LINT == "YES" ]; then
      brew outdated swiftlint || brew upgrade swiftlint
      swiftlint
    fi

  - |
    if [ $TWO_STEP_BUILD_ENABLED == "YES" ]; then
      # Build Framework
      xcodebuild -verbose -project "$PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Release clean build-for-testing | xcpretty;
      # Build Framework in Release and Run Tests if specified
      if [ $RUN_TESTS == "YES" ]; then
        xcodebuild -verbose -project "$PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Release test-without-building | xcpretty;
      fi
    else
      # Build Framework
      xcodebuild -verbose -project "$PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Release clean build | xcpretty;
    fi

  # Build with carthage
  - if [ $PUBLISH_CARTHAGE == "YES" ]; then
      carthage build --no-skip-current;
    fi
  
  # Check pod lib
  - if [ $POD_LIB_LINT == "YES" ]; then
      gem install cocoapods --pre;
      pod lib lint;
    fi

before_deploy:
  - carthage archive $FRAMEWORK_NAME;

deploy:
  # Upload framework to gh-releases for carthage
  - provider: releases
    api_key:
      secure: AJ2kOU6KobghIp4Vk6xS4jKuZa8PMqgTBPo/nc12eET6GKar9S/v/8SF7AP1QiT1oIBGkFVvCUAAIHho8+OEn+/DvfPuWNRKssFEkdYtQJuGpF8lcqKlZeyujSOSElvpD0KJ8X5S+MzHOc4RUvC5BCuZN/CcdQbJdZNzOzg9UvD510wd0aONeQtIP7hGASaDh2lqsdnTymmsW340RZWeyUm6G2PZFWvQtMNVym8lah21L8U5BsCHWd6aOG7uAdGeaHp82/UzklfQhCZG1lZAu3JHenVsn8zS8T37UhNFZp06VKB59Pp58eFbXuGhgZLIdeJsrtwsZYoKBBlZ4VaJlie3dM14IqykRUcKF4YZB0EqlMquULgYhcfu8pc2E/k7G0Qz5RGpDYo/PFYEowaqECK30sBGJbfgZKu4ROfwMesP0eCjsrNOpZGKlSaOM3rE8sU8TyuX4sA7O6laK7sOgzc0E5lqWDndaPQcu7CGTYrMklot00aM6vkn5ZQaXrSFusnKO6TEdWCQZPTc54e2S+9Foe6i7t4HMYdD3iENecqWy5US4at6nLQisUPJnVr9PhNprOOoPt37esuk1WQgsXnG8JDDtuRoINRZ7nAnTYKqzNAlCv71+dvwB2t+Ks2k4V03/RBLd9qviu44HBDJLoIwkAZrazzBQndCBojgrhA=
    file: $FRAMEWORK_NAME.framework.zip
    skip_cleanup: true
    on:
      repo: VirgilSecurity/cryptoapi-x
      tags: true
      condition: $PUBLISH_CARTHAGE = "YES"
