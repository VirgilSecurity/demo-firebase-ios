language: swift
osx_image: xcode10

env:
  global:
    - LC_CTYPE=en_US.UTF-8
    - PROJECT=VirgilSDKKeyknox.xcodeproj
    - IOS_FRAMEWORK_SCHEME="VirgilSDKKeyknox iOS"
    - MACOS_FRAMEWORK_SCHEME="VirgilSDKKeyknox macOS"
    - TVOS_FRAMEWORK_SCHEME="VirgilSDKKeyknox tvOS"
    - WATCHOS_FRAMEWORK_SCHEME="VirgilSDKKeyknox watchOS"
    - IOS_TEST_SCHEME="KeyknoxTestApp iOS"
    - TVOS_TEST_SCHEME="KeyknoxTestApp tvOS"
    - IOS_SDK=iphonesimulator12.0
    - MACOS_SDK=macosx10.14
    - TVOS_SDK=appletvsimulator12.0
    - WATCHOS_SDK=watchsimulator5.0
    - FRAMEWORK_NAME=VirgilSDKKeyknox

  matrix:
    - DESTINATION="OS=12.0,name=iPhone SE"                     ENABLE_BUILD="YES"    SCHEME="$IOS_FRAMEWORK_SCHEME"        SDK="$IOS_SDK"        TWO_STEP_BUILD_ENABLED="YES"    RUN_TESTS="YES"    ADDITIONAL_TESTS_SCHEME="$IOS_TEST_SCHEME"    PUBLISH_DOCS="NO"     PUBLISH_CARTHAGE="NO"     POD_LIB_LINT="NO"    SWIFT_LINT="NO"
    - DESTINATION="arch=x86_64"                                ENABLE_BUILD="YES"    SCHEME="$MACOS_FRAMEWORK_SCHEME"      SDK="$MACOS_SDK"      TWO_STEP_BUILD_ENABLED="YES"    RUN_TESTS="YES"    ADDITIONAL_TESTS_SCHEME=""                    PUBLISH_DOCS="NO"     PUBLISH_CARTHAGE="NO"     POD_LIB_LINT="NO"    SWIFT_LINT="NO"
    - DESTINATION="OS=12.0,name=Apple TV 4K"                   ENABLE_BUILD="YES"    SCHEME="$TVOS_FRAMEWORK_SCHEME"       SDK="$TVOS_SDK"       TWO_STEP_BUILD_ENABLED="YES"    RUN_TESTS="YES"    ADDITIONAL_TESTS_SCHEME="$TVOS_TEST_SCHEME"   PUBLISH_DOCS="NO"     PUBLISH_CARTHAGE="NO"     POD_LIB_LINT="NO"    SWIFT_LINT="NO"
    - DESTINATION="OS=5.0,name=Apple Watch Series 4 - 44mm"    ENABLE_BUILD="YES"    SCHEME="$WATCHOS_FRAMEWORK_SCHEME"    SDK="$WATCHOS_SDK"    TWO_STEP_BUILD_ENABLED="NO"     RUN_TESTS="NO"     ADDITIONAL_TESTS_SCHEME=""                    PUBLISH_DOCS="NO"     PUBLISH_CARTHAGE="NO"     POD_LIB_LINT="NO"    SWIFT_LINT="NO"
    - DESTINATION=""                                           ENABLE_BUILD="NO"     SCHEME=""                             SDK=""                TWO_STEP_BUILD_ENABLED=""       RUN_TESTS="YES"    ADDITIONAL_TESTS_SCHEME=""                    PUBLISH_DOCS="YES"    PUBLISH_CARTHAGE="YES"    POD_LIB_LINT="YES"   SWIFT_LINT="YES"

before_install:
  - set -e
  - set -o pipefail
  - brew update
  - brew outdated carthage || brew upgrade carthage
  - xcodebuild -version
  - xcodebuild -showsdks

script:
  - openssl aes-256-cbc -K $encrypted_a2cb4519b0db_key -iv $encrypted_a2cb4519b0db_iv -in config.tar.enc -out config.tar -d
  - tar xvf config.tar
  
  - |
    if [ -n "$TRAVIS_TAG" ]; then
      cp TestConfig_prod.plist Tests/Data/TestConfig.plist
    else
      cp TestConfig_stg.plist Tests/Data/TestConfig.plist
    fi


  - carthage version
  - carthage bootstrap --no-build

  - |
    if [ $SWIFT_LINT == "YES" ]; then
      brew outdated swiftlint || brew upgrade swiftlint
      swiftlint
    fi
  
  - |
    if [ $ENABLE_BUILD == "YES" ]; then
      if [ $TWO_STEP_BUILD_ENABLED == "YES" ]; then
        # Build Framework
        xcodebuild -verbose -project "$PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Release clean build | xcpretty;
        # Build Framework in Release and Run Tests if specified
        if [ $RUN_TESTS == "YES" ]; then
          if [ -n "$ADDITIONAL_TESTS_SCHEME" ]; then
            xcodebuild -verbose -project "$PROJECT" -scheme "$ADDITIONAL_TESTS_SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug clean test;
          else
            xcodebuild -verbose -project "$PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug clean test;
          fi
        fi
      else
        # Build Framework
        xcodebuild -verbose -project "$PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Release clean build | xcpretty;
      fi
    fi

  # Build with carthage
  - if [ $PUBLISH_CARTHAGE == "YES" ]; then
      carthage build --no-skip-current --no-use-binaries;
    fi
  
  # Check pod lib
  - if [ $POD_LIB_LINT == "YES" ]; then
      gem install cocoapods --pre;
      pod repo update;
      pod lib lint;
    fi

before_deploy:
  - carthage archive

after_success:
# Generate and publish docs
# - if [ -n "${TRAVIS_TAG}" ] && [ $PUBLISH_DOCS == "YES" ]; then
- if [ $PUBLISH_DOCS == "YES" ]; then
    ./CI/publish-docs.sh;
  fi

deploy:
  # Upload framework to gh-releases for carthage
  - provider: releases
    api_key:
      secure: Cl834HheeLOmRFdCFL6AYYViNanWXAIwk2KyZMXWumGXN6/y1sGGFHFt4Z9XuX594XC4itX5PwKyG9ysQFfX6N8r0ogGjW6lwS2AejUazK85pcAlvh044Dtfb7JabXG1PUI7ycVhuJ9nBZjgLSAWrMfnRkE0zR+nkt4d+Fh1CkUZE+j6qsiGIxFtOvbiX+wyLthakdnDVvTXjB3BFy9JTGWKR6jJKxbZN01Cytseh22+O2cjOr6qm+uNBVhsvi+9ZdOxl1PhxUhP22yH7z1Frq9911u57gs4vPfEu1FOpKKtZDfI6VwoFu05wKY6d6ekO+Dh/6QyddnVz9coYQTXXakjtqKY4RgYxzWidJEfRv/qwa0D7WUz1qWXL/wZax8QxYRliKqm1gxAxQp4uwNWnQm0qenQ3juVpduORT7RmbrPOEvGdkqOxhaw6HQu7eHY5Jd4qnRRgFCAK1ZUqwkMipvuCH6YcbxXS+rctVocZWMcmDfmNWN8y3XYY6KDGnmUX0mmXG7k5aBgCG+fhQKrje3BeSQWNYnmWQ5xdNSFVPwe4SZY0XwF+XeJgqHiMl2Bf05VswGg6zrqHL17JhOmACw29Fbvu9fO1jV5xriSOpb2HG0vmwvwxVZSPbDykoYz6XedqamE2kzpzH5W0OMU5Yn0mQncGIAtt26TXsjNpLA=
    file: $FRAMEWORK_NAME.framework.zip
    skip_cleanup: true
    on:
      repo: VirgilSecurity/keyknox-x
      tags: true
      condition: $PUBLISH_CARTHAGE = "YES"

      # Upload docs to gh-pages
  - provider: pages
    skip_cleanup: true
    github-token: $GITHUB_TOKEN
    local_dir: "docs"
    on:
      tags: true
      condition: $PUBLISH_DOCS = "YES"
